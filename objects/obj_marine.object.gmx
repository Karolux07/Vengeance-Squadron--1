<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_marine</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>movespeed = 5;
vsp = 0;
hsp = 0;
 
var dir = point_direction( x, y, mouse_x, mouse_y );
var xx = lengthdir_x( 40, dir );
var yy = lengthdir_y( 40, dir );
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>old_angle = image_angle

image_angle = point_direction(x,y,mouse_x,mouse_y) - 90

if(place_meeting(x,y,obj_wall)) {

    var incr = angle_difference(old_angle,image_angle)
    image_angle = old_angle

    while(!place_meeting(x,y,obj_wall)) {
        image_angle -= sign(incr) 
    }
    image_index += sign(incr)
}



key_left = -keyboard_check(ord("A")) 
key_right = keyboard_check(ord("D")) 
key_up = -keyboard_check(ord("W")) 
key_down = keyboard_check(ord("S"))
moveh = key_left + key_right; 
movev = key_up + key_down;
hsp = floor(movespeed * moveh); 
vsp = floor(movespeed * movev);



if(place_meeting(x+hsp,y,obj_wall) ) { 
    while (!place_meeting(x+sign(hsp),y,obj_wall)) {
        x+=sign(hsp); 
    } 
    hsp = 0; 
}

if(place_meeting(x,y+vsp,obj_wall) ) { 
    while (!place_meeting(x,y+sign(vsp),obj_wall)) { 
        y+=sign(vsp); 
    } 
    vsp = 0; 
}

x+=hsp; 
y+=vsp;

var xx = x + lengthdir_x( 60, image_index,);

if mouse_check_button_pressed(mb_left) 
{ 
with (instance_create( xx-60, y, obj_bullet ))
{ 
direction = point_direction(x, y, mouse_x, mouse_y); speed = 20; }
}
 
    
    
    
    
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
